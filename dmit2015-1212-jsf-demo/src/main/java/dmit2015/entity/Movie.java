package dmit2015.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 * The persistent class for the movies database table.
 */
@Getter
@Setter
@NoArgsConstructor
@Entity                     // This class is map to database table with the same name as the class name
@Table(name = "movies")     // This entity class maps to a database table named movies
public class Movie implements Serializable {

    @Column(length=32, nullable = false)
    private String username;

    @Id                 // This is the primary key field
    @GeneratedValue(strategy = GenerationType.IDENTITY)     // This primary key field is generated by the database
    private Long id;

    @Column(length = 60, nullable = false)
    @NotBlank(message = "{dmit2015.entity.Movie.title.NotBlank}")
    @Size(min = 3, max = 60, message = "{dmit2015.entity.Movie.title.Size}")
    private String title;

    @Column(nullable = false)
    @NotNull(message = "{dmit2015.entity.Movie.releaseDate.NotNull}")
    private LocalDate releaseDate;

    @DecimalMin(value = "1.00",message = "{dmit2015.entity.Movie.price.DecimalMin}")
    @DecimalMax(value = "100.00",message = "{dmit2015.entity.Movie.price.DecimalMax}")
    private BigDecimal price;

    @Column(nullable = false, length = 30)
    @NotBlank(message = "{dmit2015.entity.Movie.genre.NotBlank}")
    @Pattern(regexp = "^[A-Z]+[a-zA-Z\\s]*$",  // Must only use letters.
            // The first letter is required to be uppercase. White space, numbers, and special characters are not allowed.
            message = "{dmit2015.entity.Movie.genre.Pattern}")
    private String genre;

    @Column(nullable = false, length = 5)
    @NotBlank(message = "{dmit2015.entity.Movie.rating.NotBlank}")
    @Pattern(regexp = "^[A-Z]+[a-zA-Z0-9\"\"'\\s-]*$", // The first character can be an uppercase letter
            // Allows special characters and numbers in subsequent spaces. PG-13 is valid but fails for a Genre
            message = "{dmit2015.entity.Movie.rating.Pattern}")
    private String rating;      // G, PG, PG-13, R, NC-17


    @Version
    private Integer version;

    @Column(nullable = false)
    private LocalDateTime createdDateTime;

    @Column(nullable = false)
    private LocalDateTime lastModifiedDateTime;

    @PrePersist
    private void beforePersist() {
        createdDateTime = LocalDateTime.now();
        lastModifiedDateTime = createdDateTime;
    }

    @PreUpdate
    private void beforeUpdate() {
        lastModifiedDateTime = LocalDateTime.now();
    }

}